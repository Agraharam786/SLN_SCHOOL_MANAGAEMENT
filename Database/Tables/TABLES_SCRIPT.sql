
DROP TABLE IF EXISTS SLN_ADMISIONS
CREATE TABLE dbo.SLN_ADMISIONS
(
    ADMISION_ID INT IDENTITY(1, 1) NOT NULL ,
    FIRST_NAME VARCHAR(50) NOT NULL ,
    LAST_NAME VARCHAR(50)  NULL,
	CLASS VARCHAR(10) NOT NULL ,
	ACADEMIC_YEAR VARCHAR(10) NOT NULL,
	VILLAGE_NAME VARCHAR(150)  NOT NULL ,	
	MOBILE_NUM VARCHAR(10)  ,	
	GENDER VARCHAR(10),
	AADHAR_NUM VARCHAR(12)  NULL,
	FATHER_NAME VARCHAR(50)  NULL,
	MOTHER_NAME VARCHAR(50)  NULL,	
	SECTION VARCHAR(5),
	CASTE VARCHAR(10),
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
	CONSTRAINT PK_SLN_ADMISIONS PRIMARY KEY (FIRST_NAME,CLASS,ACADEMIC_YEAR)
);



DROP TABLE IF EXISTS SLN_ADMISIONS_STG
CREATE TABLE dbo.SLN_ADMISIONS_STG
(
    FIRST_NAME VARCHAR(50) NOT NULL ,
    LAST_NAME VARCHAR(50)  NULL,
	CLASS VARCHAR(10) NOT NULL ,
	ACADEMIC_YEAR VARCHAR(10) NULL,
	VILLAGE_NAME VARCHAR(150)  NOT NULL ,	
	MOBILE_NUM VARCHAR(10)  ,	
	GENDER VARCHAR(10),
	AADHAR_NUM VARCHAR(12)  NULL,
	FATHER_NAME VARCHAR(50)  NULL,
	MOTHER_NAME VARCHAR(50)  NULL,	
	SECTION VARCHAR(5),
	CASTE VARCHAR(10),
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50)	
);

DROP TABLE IF EXISTS SLN_FEE
CREATE TABLE dbo.SLN_FEE
(
    FEE_ID INT IDENTITY(1, 1) NOT NULL ,	
    FEE_TYPE VARCHAR(50) NOT NULL ,
	STUDENT_NAME VARCHAR(50)  NULL,
	FATHER_NAME VARCHAR(50)  NULL,
	CLASS VARCHAR(10) NOT NULL ,
    PAID_AMOUNT INT  NOT NULL,
	VILLAGE_NAME VARCHAR(150)  NOT NULL ,
	PAID_DATE DATETIME,	
	ACADEMIC_YEAR VARCHAR(10) NULL,		
	MOBILE_NUM VARCHAR(10)  ,	
	GENDER VARCHAR(10),	
	[DESCRIPTION] VARCHAR(250),
	IS_DELETED BIT ,
	CORRECTED_AMOUNT INT,
	ADMISSION_ID INT,
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
	CONSTRAINT PK_SLN_FEE PRIMARY KEY (FEE_ID,FEE_TYPE)
);

--DROP TABLE IF EXISTS SLN_FEE
--CREATE TABLE dbo.SLN_FEE
--(
--    FEE_ID INT IDENTITY(1, 1) NOT NULL ,	
--    FEE_TYPE VARCHAR(50) NOT NULL ,
--    PAID_AMOUNT INT  NOT NULL,
--	PAID_DATE DATETIME,	
--	ACADEMIC_YEAR VARCHAR(10) NULL,	
--	ADMISSION_ID INT,
--	IS_DELETED BIT ,
--	CORRECTED_AMOUNT INT,
--	LST_UPDATED_TMSP DATETIME,
--	LST_UPATED_ID VARCHAR(50),
--	CONSTRAINT PK_SLN_FEE PRIMARY KEY (FEE_ID,FEE_TYPE)
--);


DROP TABLE IF EXISTS SLN_COLLECTION_TYPE_LKP
CREATE TABLE SLN_COLLECTION_TYPE_LKP (
    COLLECTION_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    COLLECTION_TYPE VARCHAR(100),
    Description VARCHAR(255),
    LST_UPDATED_TMSP DATETIME,
    LST_UPATED_ID VARCHAR(50)
	);

	
DROP TABLE IF EXISTS SLN_EXPENSE_TYPE_LKP
CREATE TABLE SLN_EXPENSE_TYPE_LKP (
    EXPENSE_TYPE_ID INT IDENTITY(1,1) PRIMARY KEY,
    EXPENSE_TYPE VARCHAR(100),
    Description VARCHAR(255),
    LST_UPDATED_TMSP DATETIME,
    LST_UPATED_ID VARCHAR(50)
	);

DROP TABLE IF EXISTS SLN_EXPENSE
CREATE TABLE dbo.SLN_EXPENSE
(
    EXPENSE_ID INT IDENTITY(1, 1) NOT NULL ,
	EXPENSE_TYPE VARCHAR(50) NOT NULL,
	[DESCRIPTION] VARCHAR(MAX),
	EXPENSE_AMOUNT INT  NOT NULL,
	ENTRY_DATE DATETIME,
	IS_DELETED BIT,
	EXP_CORRECTED_AMOUNT INT,
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
	CONSTRAINT PK_SLN_EXPENSE PRIMARY KEY (EXPENSE_ID,EXPENSE_TYPE)
);

DROP TABLE IF EXISTS SLN_COLLECTION
CREATE TABLE dbo.SLN_COLLECTION
(
    COLLECTION_ID INT IDENTITY(1, 1) NOT NULL ,
	COLLECTION_TYPE VARCHAR(50) NOT NULL,
	[DESCRIPTION] VARCHAR(MAX),
	COLLECTION_AMOUNT INT  NOT NULL,
	ENTRY_DATE DATETIME,
	IS_DELETED BIT,
	CORRECTED_AMOUNT INT,
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
	CONSTRAINT PK_SLN_COLLECTION PRIMARY KEY (COLLECTION_ID,COLLECTION_TYPE)
);

DROP TABLE IF EXISTS SLN_FEETYPE_LKP
CREATE TABLE dbo.SLN_FEETYPE_LKP
(
    FEETYPE_ID INT IDENTITY(1, 1) NOT NULL ,
	FEE_TYPE VARCHAR(50),
	[DESCRIPTION] VARCHAR(MAX),
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
);

DROP TABLE IF EXISTS SLN_VILLAGE_LKP
CREATE TABLE dbo.SLN_VILLAGE_LKP
(
    VILLAGE_ID INT IDENTITY(1, 1) NOT NULL ,
	VILLAGE_NAME VARCHAR(200),
	LST_UPDATED_TMSP DATETIME,
	LST_UPATED_ID VARCHAR(50),
);
/*
select * from SLN_ADMISIONS
select * from SLN_FEE
select * from SLN_COLLECTION
select * from SLN_FEETYPE
select * from SLN_VILLAGE


*/
